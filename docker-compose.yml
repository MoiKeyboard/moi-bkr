version: "3.8"

services:
  market-scanner:
    build: .
    container_name: market-scanner
    restart: unless-stopped
    labels:
      # Core configuration
      - "traefik.enable=true"
      # Router configuration
      - "traefik.http.routers.market-scanner.rule=Host(`api.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.market-scanner.entrypoints=web,websecure"
      - "traefik.http.routers.market-scanner.middlewares=strip-api-prefix@docker"
      - "traefik.http.routers.market-scanner.tls=true"
      # Service configuration
      - "traefik.http.services.market-scanner.loadbalancer.server.port=8000"
      # Middleware configuration
      - "traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api"
    environment:
      - ENV_MODE=prod
      - PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./.data:/app/.data
      - ./config.yaml:/app/config.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trading-network

  # Traefik reverse proxy service
  reverse-proxy:
    image: traefik:v3.3
    container_name: traefik
    # Static configuration
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=DEBUG"
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Docker socket
      - ./certs:/certs:ro # Certificates
      # - ./traefik.yml:/etc/traefik/traefik.yml:ro  # traefik config file
    networks:
      - trading-network
    # Dynamic Configuration
    labels:
      # Core configuration
      - "traefik.enable=true"
      # Router configuration
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.entrypoints=web,websecure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"
      # TLS Configuration
      - "traefik.tls.certificates.certfile=/certs/wildcard.crt"
      - "traefik.tls.certificates.keyfile=/certs/wildcard.key"
  # Test service to verify Traefik routing
  whoami:
    image: traefik/whoami  # Simple test container that shows request info
    container_name: whoami
    labels:
      - "traefik.enable=true"  # Enable Traefik for this container
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"  # Route requests for whoami.localhost
      - "traefik.http.services.whoami.loadbalancer.server.port=80"   # Container port to route to
    networks:
      - trading-network

# Shared network for all services
networks:
  trading-network:
    name: trading-network 