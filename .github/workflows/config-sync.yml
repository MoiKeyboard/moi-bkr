# IBKR/config/README.md
name: Config Sync

on:
  push:
    paths:
      - 'config/base.yml'
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Sync Configuration Files
        run: |
          python .github/workflows/scripts/config_sync.py

      - name: Check and Create PR if needed
        id: sync-check
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "Changes detected after config sync"
            
            # Create PR body file
            rm -f /tmp/pr-body.md
            echo "This PR synchronizes environment configurations with base.yml" > /tmp/pr-body.md
            echo >> /tmp/pr-body.md
            echo "### Changes Overview" >> /tmp/pr-body.md
            echo "This automated PR:" >> /tmp/pr-body.md
            echo "- Sorts all configuration files alphabetically" >> /tmp/pr-body.md
            echo "- Updates environment-specific configurations to align with changes in base.yml" >> /tmp/pr-body.md
            echo >> /tmp/pr-body.md
            echo "### Diff Details" >> /tmp/pr-body.md
            echo '```diff' >> /tmp/pr-body.md
            git diff >> /tmp/pr-body.md
            echo '```' >> /tmp/pr-body.md
            echo >> /tmp/pr-body.md
            echo "### Notes" >> /tmp/pr-body.md
            echo "- Only environment-specific overrides are preserved" >> /tmp/pr-body.md
            echo "- All other values are inherited from base.yml" >> /tmp/pr-body.md
            echo "- Review the changes to ensure no environment-specific configurations were accidentally modified" >> /tmp/pr-body.md
            
            # Configure git
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            
            # Create new branch with timestamp
            BRANCH_NAME="auto/config-sync-$(date +%Y%m%d-%H%M%S)"
            git checkout -b "$BRANCH_NAME"
            
            # Commit and push changes to new branch
            git add config/*.yml
            git commit -m "chore: sort and sync configuration files"
            git push origin "$BRANCH_NAME"
            
            # Create Pull Request using GitHub CLI with error handling
            echo "Creating pull request..."
            NEW_PR_NUM=""
            if gh pr create \
              --title "Config Sync: Sort and update configuration files" \
              --body-file /tmp/pr-body.md \
              --base main \
              --head "$BRANCH_NAME"; then
              
              # Get the PR number that was just created
              NEW_PR_NUM=$(gh pr view "$BRANCH_NAME" --json number --jq '.number')
              echo "Successfully created PR #$NEW_PR_NUM from branch $BRANCH_NAME"
              
              # Now close older PRs and delete their branches
              echo "Closing existing config-sync pull requests..."
              EXISTING_PRS=$(gh pr list --head "auto/config-sync-" --json number,headRefName --jq '.[] | [.number, .headRefName] | @tsv')
              
              if [ -n "$EXISTING_PRS" ]; then
                echo "$EXISTING_PRS" | while read -r PR_NUM PR_BRANCH; do
                  # Skip the PR we just created
                  if [ "$PR_NUM" != "$NEW_PR_NUM" ]; then
                    echo "Closing PR #$PR_NUM from branch $PR_BRANCH"
                    gh pr close "$PR_NUM" --comment "Superseded by PR #$NEW_PR_NUM"
                    
                    # Delete the branch
                    git push origin --delete "$PR_BRANCH" || echo "Could not delete branch $PR_BRANCH"
                  fi
                done
              fi
            else
              echo "Failed to create PR, but changes are pushed to branch $BRANCH_NAME"
              exit 0
            fi
          fi

      - name: Report Status
        if: always()
        run: |
          echo "Config Sync Summary:"
          echo "- Sync status: ${{ job.status }}"
