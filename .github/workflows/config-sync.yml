# IBKR/config/README.md
name: Config Sync

on:
  push:
    paths:
      - 'config/base.yml'
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Sync Configuration Files
        run: |
          python .github/workflows/scripts/config_sync.py

      - name: Check for configuration changes
        id: check-changes
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create new branch
        if: steps.check-changes.outputs.has_changes == 'true'
        id: create-branch
        run: |
          # Configure git
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Create new branch with timestamp
          BRANCH_NAME="auto/config-sync-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Prepare PR body
        if: steps.check-changes.outputs.has_changes == 'true'
        id: prepare-pr
        run: |
          # Create PR body file
          rm -f /tmp/pr-body.md
          echo "This PR synchronizes environment configurations with base.yml" > /tmp/pr-body.md
          echo >> /tmp/pr-body.md
          echo "### Changes Overview" >> /tmp/pr-body.md
          echo "This automated PR:" >> /tmp/pr-body.md
          echo "- Sorts all configuration files alphabetically" >> /tmp/pr-body.md
          echo "- Updates environment-specific configurations to align with changes in base.yml" >> /tmp/pr-body.md
          echo >> /tmp/pr-body.md
          echo "### Diff Details" >> /tmp/pr-body.md
          echo '```diff' >> /tmp/pr-body.md
          git diff >> /tmp/pr-body.md
          echo '```' >> /tmp/pr-body.md
          echo >> /tmp/pr-body.md
          echo "### Notes" >> /tmp/pr-body.md
          echo "- Only environment-specific overrides are preserved" >> /tmp/pr-body.md
          echo "- All other values are inherited from base.yml" >> /tmp/pr-body.md
          echo "- Review the changes to ensure no environment-specific configurations were accidentally modified" >> /tmp/pr-body.md

      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        id: push-changes
        run: |
          # Commit and push changes to new branch
          git add '*.yml'
          git commit -m "chore: sort and sync configuration yml files"
          git push origin "${{ steps.create-branch.outputs.branch_name }}"
          echo "pushed=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.push-changes.outputs.pushed == 'true'
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          # Create Pull Request using GitHub CLI
          echo "Creating pull request..."
          PR_URL=$(gh pr create \
            --title "Config Sync: Sort and update configuration files" \
            --body-file /tmp/pr-body.md \
            --base main \
            --head "${{ steps.create-branch.outputs.branch_name }}" --json url --jq '.url')
          
          if [ -n "$PR_URL" ]; then
            echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
            echo "created=true" >> $GITHUB_OUTPUT
            echo "Successfully created PR: $PR_URL"
          else
            echo "Failed to create PR"
            echo "created=false" >> $GITHUB_OUTPUT
          fi

      - name: List PRs to close
        if: steps.create-pr.outputs.created == 'true'
        id: list-old-prs
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          # List open PRs with head branch matching auto/config-sync-*
          # But exclude the one we just created
          gh pr list --search "head:auto/config-sync- is:open" --json number,headRefName,url --jq '.[] | select(.url != "${{ steps.create-pr.outputs.pr_url }}") | [.number, .headRefName] | @tsv' > /tmp/prs_to_close.txt
          
          if [ -s /tmp/prs_to_close.txt ]; then
            echo "has_prs_to_close=true" >> $GITHUB_OUTPUT
          else
            echo "has_prs_to_close=false" >> $GITHUB_OUTPUT
          fi

      - name: Close old PRs
        if: steps.list-old-prs.outputs.has_prs_to_close == 'true'
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          NEW_PR_URL: ${{ steps.create-pr.outputs.pr_url }}
        run: |
          echo "Closing older config-sync pull requests..."
          
          NEW_PR_NUM=$(echo "$NEW_PR_URL" | grep -o '[0-9]\+$')
          
          while read -r PR_NUM PR_BRANCH; do
            echo "Closing PR #$PR_NUM from branch $PR_BRANCH"
            gh pr close "$PR_NUM" --comment "Superseded by PR #$NEW_PR_NUM"
            echo "$PR_BRANCH" >> /tmp/branches_to_delete.txt
          done < /tmp/prs_to_close.txt

      - name: Clean up branches
        if: always() && steps.list-old-prs.outputs.has_prs_to_close == 'true'
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          if [ -f /tmp/branches_to_delete.txt ]; then
            echo "Deleting old branches..."
            while read -r BRANCH; do
              echo "Deleting branch $BRANCH"
              git push origin --delete "$BRANCH" || echo "Could not delete branch $BRANCH"
            done < /tmp/branches_to_delete.txt
          fi

      - name: Report Status
        if: always()
        run: |
          echo "Config Sync Summary:"
          echo "- Sync status: ${{ job.status }}"
